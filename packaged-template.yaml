AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: BNDY Platform Serverless API - Lambda Functions + API Gateway (Redeploying)
Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Tracing: Active
    Environment:
      Variables:
        NODE_ENV: production
        JWT_SECRET: 2c7fccb87d98f68d36b19d528aa81a61afacf91058c18ee49738c35b50b81aa5
        _X_AMZN_TRACE_ID:
          Ref: AWS::NoValue
Parameters:
  Stage:
    Type: String
    Default: prod
    Description: Deployment stage (dev, staging, prod)
Resources:
  BndyHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: $default
      CorsConfiguration:
        AllowOrigins:
        - https://backstage.bndy.co.uk
        - https://d3cewujswmjafa.cloudfront.net
        AllowHeaders:
        - Content-Type
        - Authorization
        - Cookie
        - X-Amz-Date
        - X-Api-Key
        - X-Amz-Security-Token
        AllowMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
        AllowCredentials: true
        MaxAge: 300
  VenuesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://bndy-lambda-deployments/ab7a2eda14690037f47eb024ea6701c0
      Handler: handler.handler
      MemorySize: 512
      Description: BNDY Venues API - handles /api/venues endpoints
      Role: arn:aws:iam::771551874768:role/bndy-api-instance-role
      Events:
        GetAllVenues:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/venues
            Method: get
        GetVenueById:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/venues/{id}
            Method: get
        CreateVenue:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/venues
            Method: post
        UpdateVenue:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/venues/{id}
            Method: put
        DeleteVenue:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/venues/{id}
            Method: delete
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://bndy-lambda-deployments/ff378d36c42e37a93dd32d5c967b6b65
      Handler: handler.handler
      MemorySize: 512
      Description: BNDY Authentication API - handles OAuth and sessions
      Role: arn:aws:iam::771551874768:role/bndy-api-instance-role
      Events:
        AuthGoogle:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /auth/google
            Method: get
        AuthCallback:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /auth/callback
            Method: get
        ApiMe:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/me
            Method: get
        AuthLogout:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /auth/logout
            Method: post
        AuthLanding:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /auth/landing
            Method: get
  UsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://bndy-lambda-deployments/e148ed20d9a74f20409291fd8fcb33c6
      Handler: handler.handler
      MemorySize: 512
      Description: BNDY Users API - handles user profile management
      Role: arn:aws:iam::771551874768:role/bndy-api-instance-role
      Events:
        GetUserProfile:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /users/profile
            Method: get
        UpdateUserProfile:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /users/profile
            Method: put
        ListUsers:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /users
            Method: get
  EventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://bndy-lambda-deployments/2b9826fb36693e9ffbe4577832b45f29
      Handler: handler.handler
      MemorySize: 512
      Description: BNDY Events API - handles calendar and event management
      Role: arn:aws:iam::771551874768:role/bndy-api-instance-role
      Events:
        GetPublicEvents:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/events
            Method: get
        CreateEvent:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /admin/events
            Method: post
        UpdateEvent:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /admin/events/{id}
            Method: put
        DeleteEvent:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /admin/events/{id}
            Method: delete
        GetBandEvents:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /admin/events/band/{bandId}
            Method: get
  ArtistsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://bndy-lambda-deployments/59d3c3681d2c6982735224ef82685282
      Handler: handler.handler
      MemorySize: 512
      Description: BNDY Artists API - handles /api/artists endpoints
      Role: arn:aws:iam::771551874768:role/bndy-api-instance-role
      Events:
        GetAllArtists:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/artists
            Method: get
        GetArtistById:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/artists/{id}
            Method: get
        CreateArtist:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/artists
            Method: post
        UpdateArtist:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/artists/{id}
            Method: put
        DeleteArtist:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/artists/{id}
            Method: delete
  SongsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://bndy-lambda-deployments/644c517085fbda7759ff9def17a1591a
      Handler: handler.handler
      MemorySize: 512
      Description: BNDY Songs API - handles /api/songs endpoints
      Role: arn:aws:iam::771551874768:role/bndy-api-instance-role
      Events:
        GetAllSongs:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/songs
            Method: get
        GetSongById:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/songs/{id}
            Method: get
        CreateSong:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/songs
            Method: post
        UpdateSong:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/songs/{id}
            Method: put
        DeleteSong:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/songs/{id}
            Method: delete
  MembershipsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://bndy-lambda-deployments/5068cb449f3bb1995a78681c0371d450
      Handler: handler.handler
      MemorySize: 512
      Description: BNDY Memberships API - handles artist membership management
      Role: arn:aws:iam::771551874768:role/bndy-api-instance-role
      Events:
        GetMyMemberships:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/memberships/me
            Method: get
        GetArtistMembers:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/artists/{artistId}/members
            Method: get
        AddArtistMember:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/artists/{artistId}/members
            Method: post
        UpdateMembership:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/memberships/{membershipId}
            Method: put
        DeleteMembership:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: BndyHttpApi
            Path: /api/memberships/{membershipId}
            Method: delete
  ArtistMembershipsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: bndy-artist-memberships
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: membership_id
        AttributeType: S
      - AttributeName: user_id
        AttributeType: S
      - AttributeName: artist_id
        AttributeType: S
      KeySchema:
      - AttributeName: membership_id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: user_id-index
        KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      - IndexName: artist_id-index
        KeySchema:
        - AttributeName: artist_id
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      Tags:
      - Key: Project
        Value: BNDY
      - Key: Environment
        Value:
          Ref: Stage
      - Key: Component
        Value: Memberships
  AuthLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${AuthFunction}
      RetentionInDays: 30
  UsersLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${UsersFunction}
      RetentionInDays: 30
  EventsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${EventsFunction}
      RetentionInDays: 30
  VenuesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${VenuesFunction}
      RetentionInDays: 30
  ArtistsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${ArtistsFunction}
      RetentionInDays: 30
  SongsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${SongsFunction}
      RetentionInDays: 30
  MembershipsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${MembershipsFunction}
      RetentionInDays: 30
  AuthErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        Fn::Sub: ${AWS::StackName}-AuthFunction-Errors
      AlarmDescription: Alarm for Auth Lambda function errors
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: FunctionName
        Value:
          Ref: AuthFunction
Outputs:
  BndyHttpApi:
    Description: HTTP API Gateway endpoint URL for BNDY API
    Value:
      Fn::Sub: https://${BndyHttpApi}.execute-api.${AWS::Region}.amazonaws.com/
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-HttpApiUrl
  VenuesFunctionArn:
    Description: Venues Lambda Function ARN
    Value:
      Fn::GetAtt:
      - VenuesFunction
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-VenuesFunctionArn
  AuthFunctionArn:
    Description: Auth Lambda Function ARN
    Value:
      Fn::GetAtt:
      - AuthFunction
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-AuthFunctionArn
  UsersFunctionArn:
    Description: Users Lambda Function ARN
    Value:
      Fn::GetAtt:
      - UsersFunction
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-UsersFunctionArn
  ArtistsFunctionArn:
    Description: Artists Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ArtistsFunction
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ArtistsFunctionArn
  SongsFunctionArn:
    Description: Songs Lambda Function ARN
    Value:
      Fn::GetAtt:
      - SongsFunction
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-SongsFunctionArn
  AuthLogGroupName:
    Description: Auth Lambda CloudWatch Log Group Name
    Value:
      Ref: AuthLogGroup
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-AuthLogGroup
  UsersLogGroupName:
    Description: Users Lambda CloudWatch Log Group Name
    Value:
      Ref: UsersLogGroup
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-UsersLogGroup
  EventsLogGroupName:
    Description: Events Lambda CloudWatch Log Group Name
    Value:
      Ref: EventsLogGroup
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-EventsLogGroup
